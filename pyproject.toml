[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "flory"
description = "Python package for finding coexisting phases in multicomponent mixtures"
authors = [{ name = "Yicheng Qiang", email = "yicheng.qiang@ds.mpg.de" }]
license = { text = "MIT License" }
readme = "README.md"
requires-python = ">=3.9"
dynamic = ["version", "dependencies", "optional-dependencies"]

keywords = ["physics", "phase-separation", "free-energy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }
optional-dependencies = { dev = { file = [
    "tests/requirements.txt",
    "docs/requirements.txt",
] } }

[tool.setuptools_scm]
version_file = "flory/_version.py"

[project.urls]
homepage = "https://github.com/qiangyicheng/flory"
documentation = "https://flory.readthedocs.io"
repository = "https://github.com/qiangyicheng/flory"

[tool.setuptools]
include-package-data = true

[tool.black]
target_version = ["py39"]

[tool.isort]
profile = "black"
src_paths = ["flory", "examples", "tests"]
known_self = ["flory"]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "SELF",
    "LOCALFOLDER",
]

[tool.ruff]
target-version = "py39"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "UP",  # pyupgrade
    "I",  # isort
    "A",  # flake8-builtins 
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]
ignore = ["B007", "B027", "B028", "SIM108", "ISC001", "PT006", "PT011", "PTH123", "RET504", "RET505", "RET506"]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "self", "local-folder"]

[tool.ruff.lint.isort.sections]
self = ["flory"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--strict-markers"
testpaths = ["tests"]
pythonpath = ["."]